---
import Button from '@components/Button.astro'
import Clock from '@components/Clock'
import Heading from '@components/Heading.astro'
import Iconed from '@components/Iconed.astro'
import Link from '@components/Link.astro'
import ProjectCard from '@components/ProjectCard.astro'
import Section from '@components/Section.astro'
import SkillsList from '@components/SkillsList.astro'
import StartOfContentAnchor from '@components/StartOfContentAnchor.astro'
import Workplace from '@components/Workplace.astro'
import WorkplaceCard from '@components/WorkplaceCard.astro'
import Main from '@layouts/Main.astro'
import {
  CONTACTS,
  LOCATION,
  META,
  PERSONAL_DATA,
  PROJECTS,
  SEPARATOR,
  URLS,
  WORK,
} from '@utils/data'
import { MapPin, Clock as ClockIcon, Mail, Download } from 'react-feather'

const allSkills = [
  ...new Set([
    ...WORK.experience
      .filter((workplace) => workplace.skills)
      .map((workplace) => workplace.skills)
      .flat(),
  ]),
]

const title = 'About'
---

<Main fullTitle={title + META.ogTitle} title={title}>
  <Section class="relative mb-9">
    <span class="align-center inline-flex flex-wrap">
      <StartOfContentAnchor />
      <Heading
        headingLevel={1}
        id="greeting"
        iconSize={32}
        class="mb-9"
        title="Main Section Anchor">
        <>
          Hi!
          <br class="sm:hidden" />
           I&rsquo;m
          {PERSONAL_DATA.fullName}
        </>
        <div
          class="absolute right-0 top-5 flex justify-between gap-4 align-baseline"
          slot="aside">
          <Link
            href={`mailto:${CONTACTS.email.url}`}
            title={CONTACTS.email.title + ': ' + URLS.email}
            isExternal
            analyticsClick="email-top"
            analyticsTitle={CONTACTS.email.title}
            class="hidden md:inline-block">
            <Mail />
          </Link>
        </div>
      </Heading>
      <span
        class="duration-2000 ml-4 hidden origin-bottom-right text-6xl transition-all ease-in-out hover:animate-wave sm:inline-flex">
        ðŸ‘‹
      </span>
    </span>
    <p class="text-xl leading-loose">
      a
      <em>{PERSONAL_DATA.occupation}</em> at
      <Link
        href={WORK.experience[0].url}
        title={WORK.experience[0].company}
        analyticsClick={`current-workplace-${WORK.experience[0].company}`}
        analyticsTitle={'Current: ' + WORK.experience[0].company}
        isExternal>
        <Workplace companyName={WORK.experience[0].company} />
      </Link>
       via
      <Link
        analyticsClick={`current-workplace-${WORK.experience[1].company}`}
        analyticsTitle={'Current: ' + WORK.experience[1].company}
        href={WORK.experience[1].url}
        title={WORK.experience[1].company}
        isExternal>
        <Workplace companyName={WORK.experience[1].company} />
      </Link> with {WORK.totalYearsOfExperience}+&nbsp;years of experience based
      in
      <Button
        analyticsClick="open-map"
        analyticsTitle="Open map"
        class="group/location text-base"
        data-map-button
        title={LOCATION.flag + ' ' + LOCATION.title}>
        <Iconed class="relative">
          <MapPin slot="icon" data-map-button-icon />
          <span
            class="inline-flex tracking-[.008em] opacity-100 transition-opacity group-hover/location:hidden">
            {LOCATION.title}
          </span>
          <span class="hidden group-hover/location:inline-flex">
            {LOCATION.original}
          </span>
        </Iconed>
      </Button>{' '}
      <span class="inline-block w-20" data-clock-wrapper>
        <Iconed class="not-sr-only font-mono text-lg">
          <ClockIcon slot="icon" strokeWidth={3} />
          <Clock client:only="react" />
        </Iconed>.</span
      > I&rsquo;m
      <em>passionate about web</em>
       and, especially, frontend development. I like to be on the edge of
      <em>solving business problems</em>
       & appeal for users and believe that
      <em>soft skills</em>
       and
      <em>clean code</em>
       matter.
    </p>

    <p
      class="mt-6 flex flex-wrap justify-center gap-2 text-center text-xl leading-loose">
      {
        PERSONAL_DATA.tagLines.map((tagLine, index) => (
          <span class="flex flex-wrap justify-center gap-2">
            <span class="inline-flex" data-testid="tagLine">
              {tagLine}
            </span>
            {index !== PERSONAL_DATA.tagLines.length - 1 && (
              <span class="inline-flex" data-testid="tagLine-separator">
                {SEPARATOR}
              </span>
            )}
          </span>
        ))
      }
    </p>
  </Section>

  <div
    class="h-0 overflow-hidden rounded-lg shadow-lg shadow-gray-300 transition-[height] transition-shadow ease-in-out dark:shadow-stone-950"
    data-map-container>
    <iframe
      title="Location map"
      class="h-96 w-full"
      src={LOCATION.link}
      allowfullscreen=""
      loading="lazy"
      referrerpolicy="no-referrer-when-downgrade"></iframe>
  </div>

  <Section data-testid="projects" class="mb-9">
    <Heading id="projects" title="Projects" class="mb-1">Projects</Heading>
    <p class="mb-5 text-gray-500 dark:text-gray-400">
      I&rsquo;m currently involved in a few small open-source projects. Keep an
      eye out for more contributions from me soon. ðŸš€
    </p>
    <ul class="grid grid-cols-1 gap-8 gap-x-4 sm:grid-cols-2">
      {PROJECTS.map((project) => <ProjectCard project={project} />)}
    </ul>
  </Section>

  <Section data-testid="experience" class="mb-9">
    <Heading id="experience" title="Experience" class="mb-5">
      Work Experience {SEPARATOR}{' '}
      {WORK.totalYearsOfExperience}+ years
      <div class="flex gap-1" slot="aside">
        <Link
          isExternal
          href={CONTACTS.resume.url}
          title={CONTACTS.resume.title}
          analyticsClick="resume-download"
          class="hidden md:inline-block">
          <Download />
          <span class="sr-only">{CONTACTS.resume.title}</span>
        </Link>
      </div>
    </Heading>
    <ul class="grid grid-cols-1 gap-8 gap-x-4 sm:grid-cols-2">
      {
        WORK.experience.map((workplace) => (
          <WorkplaceCard workplace={workplace} />
        ))
      }
    </ul>
  </Section>

  <Section data-testid="skills-section" class="mb-9">
    <Heading id="skills" title="Skills" class="mb-5">Skills</Heading>
    <SkillsList skills={allSkills} />
  </Section>
</Main>

<script>
  const mapButton = document.querySelector(
    '[data-map-button]',
  ) as HTMLButtonElement

  const mapContainer = document.querySelector('[data-map-container]')
  const mapButtonIcon = document.querySelector('[data-map-button-icon]')

  mapButton.onclick = function mapToggle() {
    const wasOpen = mapContainer?.classList.contains('h-96')

    const removeOrAdd = wasOpen ? 'remove' : 'add'
    const addOrRemove = wasOpen ? 'add' : 'remove'

    mapButton?.classList[removeOrAdd]('shadow-inner', 'bg-gray-50')
    mapButtonIcon?.classList[removeOrAdd]('rotate-180')

    mapContainer?.classList[removeOrAdd]('h-96', 'mb-8')
    mapContainer?.classList[addOrRemove]('h-0', 'mb-0')
  }

  if (window) {
    window.onload = function updateClockWrapper() {
      const clockWrapper = document.querySelector('[data-clock-wrapper]')
      clockWrapper?.classList.remove('w-20')
    }
  }
</script>

<style>
  h1 {
    @apply text-6xl;
  }

  h2 {
    @apply text-4xl;
  }

  h3 {
    @apply text-2xl;
  }
</style>
