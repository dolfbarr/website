---
import Button from '@components/Button.astro'
import Clock from '@components/Clock'
import Heading from '@components/Heading.astro'
import Iconed from '@components/Iconed.astro'
import Link from '@components/Link.astro'
import Section from '@components/Section.astro'
import SkillsList from '@components/SkillsList.astro'
import StartOfContentAnchor from '@components/StartOfContentAnchor.astro'
import Workplace from '@components/Workplace.astro'
import WorkplaceCard from '@components/WorkplaceCard.astro'
import Landing from '@layouts/Landing.astro'
import { CONTACTS, LOCATION, PERSONAL_DATA, URLS, WORK } from '@utils/data'
import {
  MapPin,
  Clock as ClockIcon,
  Mail,
  Download,
  ExternalLink,
} from 'react-feather'

const allSkills = [
  ...new Set([
    ...WORK.experience
      .filter((workplace) => workplace.skills)
      .map((workplace) => workplace.skills)
      .flat(),
  ]),
]
---

<Landing>
  <Section class="relative">
    <span class="align-center inline-flex flex-wrap">
      <StartOfContentAnchor />
      <Heading
        headingLevel={1}
        id="greeting"
        iconSize={32}
        title="Main Section Anchor">
        <>
          <span>Hi!</span>
          <br class="sm:hidden" />
          <span> I&rsquo;m</span>
          {PERSONAL_DATA.fullName}{' '}
        </>
        <div
          class="absolute right-0 top-5 flex justify-between gap-4 align-baseline"
          slot="aside">
          <Link
            href={`mailto:${CONTACTS.email.url}`}
            title={CONTACTS.email.title + ': ' + URLS.email}
            isExternal
            class="hidden md:inline-block">
            <Mail />
          </Link>
        </div>
      </Heading>
      <span
        class="duration-2000 ml-4 hidden origin-bottom-right text-6xl transition-all ease-in-out hover:animate-wave sm:inline-flex">
        ðŸ‘‹
      </span>
    </span>
    <p class="hyphens text-xl leading-loose">
      a{' '}
      <em>{PERSONAL_DATA.occupation}</em> at{' '}
      <Link
        href={WORK.experience[0].url}
        title={WORK.experience[0].company}
        isExternal>
        <Workplace companyName={WORK.experience[0].company} />
      </Link>{' '}
       &{' '}
      <Link
        href={WORK.experience[1].url}
        title={WORK.experience[1].company}
        isExternal>
        <Workplace companyName={WORK.experience[1].company} />
      </Link>{' '}with {WORK.totalYearsOfExperience}+&nbsp;years of experience
      based in{' '}
      <Button
        class="group/location text-base"
        title={LOCATION.flag + ' ' + LOCATION.title}>
        <Iconed class="relative inline-flex">
          <MapPin slot="icon" />
          <span
            class="inline-flex tracking-[.008em] opacity-100 transition-opacity group-hover/location:hidden">
            {LOCATION.title}
          </span>
          <span class="hidden group-hover/location:inline-flex">
            {LOCATION.original}
          </span>
        </Iconed>
      </Button>{' '}
      <Iconed class="font-mono text-lg">
        <ClockIcon slot="icon" strokeWidth={3} />
        <Clock client:load />
      </Iconed>
      {'. '}
      <span>
        I&rsquo;m
        <em>passionate about web</em>
         and, especially, frontend development. I like to be on the edge of
        <em>solving business problems</em>
         & appeal for users and believe that
        <em>soft skills</em>
         and
        <em>clean code</em>
         matter.
      </span>
    </p>

    <p
      class="mt-6 flex flex-wrap justify-center gap-2 text-center text-xl leading-loose">
      {
        PERSONAL_DATA.tagLines.map((tagLine, index) => (
          <span class="flex flex-wrap justify-center gap-2">
            <span class="inline-flex" data-testid="tagLine">
              {tagLine}
            </span>
            {index !== PERSONAL_DATA.tagLines.length - 1 && (
              <span class="inline-flex" data-testid="tagLine-separator">
                Â·
              </span>
            )}
          </span>
        ))
      }
    </p>
  </Section>
  <Section data-testid="experience">
    <Heading id="experience" title="Experience">
      Work Experience Â· {WORK.totalYearsOfExperience}+{' '}years{' '}
      <div class="flex gap-1" slot="aside">
        <Link href="/resume" title="Go to resume page">
          <span class="sr-only">Go to resume page</span>
          <ExternalLink />
        </Link>

        <Link
          isExternal
          href={CONTACTS.resume.url}
          title={CONTACTS.resume.title}
          class="hidden md:inline-block">
          <Download />
          <span class="sr-only">{CONTACTS.resume.title}</span>
        </Link>
      </div>
    </Heading>
    <ul class="grid grid-cols-1 gap-6 sm:grid-cols-2">
      {
        WORK.experience.map((workplace) => (
          <WorkplaceCard workplace={workplace} />
        ))
      }
    </ul>
  </Section>
  <Section data-testid="skills-section">
    <Heading id="skills" title="Skills">Skills</Heading>
    <SkillsList skills={allSkills} />
  </Section>
</Landing>
