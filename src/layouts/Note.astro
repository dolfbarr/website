---
import Link from '@components/Link.astro'
import Separator from '@components/Separator.astro'
import { META, SEPARATOR, URLS } from '@utils/data'
import { Social } from '@utils/types'
import { Image } from 'astro:assets'

import packageJson from '../../package.json'

import Main from './Main.astro'

const { data, id, slug } = Astro.props

const githubLink =
  packageJson.repository.url + '/edit/main/src/content/notes/' + id

const dateObject = new Date(data.date)
---

<Main
  title={data.title}
  fullTitle={data.title + META.ogTitle}
  description={data.description}
  date={dateObject.toISOString().split('T')[0]}
  type="article"
  url={'/notes/' + slug}
  image={`/notes/${id.split('.').slice(0, -1).join('')}.png`}>
  <article
    class:list={[
      'w-full max-w-none',
      'prose prose-neutral dark:prose-invert lg:prose-lg', // general
      'prose-pre:border-primary dark:prose-pre:border-primary-dark',
      'prose-pre:rounded-lg prose-pre:border-2',
      'prose-figcaption:text-center',
      'prose-img:rounded-lg prose-img:shadow-lg prose-img:shadow-gray-300 prose-img:transition-shadow dark:prose-img:shadow-stone-950',
      'prose-headings:font-bold',
      'prose-p:text-gray-700 dark:prose-p:text-gray-200',
      'prose-headings:text-gray-700 dark:prose-headings:text-gray-200',
    ]}>
    {
      data.image && (
        <Image
          src={data.image.url}
          alt={data.image.alt}
          width={data.image.width ?? '1600'}
          height={data.image.height ?? '900'}
          class="aspect-video w-full rounded-lg object-cover"
        />
      )
    }
    <header class="pb-0">
      <h1 class="mb-0 pb-2 lg:mb-0 lg:pb-2">{data.title}</h1>
      <p class="p-O lg:p-O m-0 text-gray-500 dark:text-gray-400 lg:m-0">
        <time>{dateObject.toLocaleDateString()}</time>
        {
          (data?.tags ?? []).map((tag: string) => (
            <span>
              {' '}
              {SEPARATOR} #{tag}
            </span>
          ))
        }
      </p>
    </header>

    <slot />

    <Separator />
    <footer>
      <Link
        isExternal
        href={URLS[Social.Twitter] ?? ''}
        title="Dicuss on twitter"
        analyticsClick="discuss-on-twitter">
        Discuss on Twitter
      </Link>
      {SEPARATOR}
      <Link
        isExternal
        href={githubLink}
        title="Edit on GitHub"
        analyticsClick="edit-on-github">
        Edit on GitHub
      </Link>
    </footer>
  </article>
</Main>
